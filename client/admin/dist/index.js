(()=>{var n={913:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                border: none;\n                background-color:transparent;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .tab-section {\n                width:100%;\n            }\n            \n            .tab-list{\n                width:100%;\n            }\n\n            .tab-section ul li {\n                display: flex;\n                flex-direction: column;\n                gap: 1rem;\n            }\n\n            .ficha {\n                display: flex;\n                flex-direction: column;\n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n\n            }\n\n            .ficha .tab-options {\n                background-color: rgba(109,183,243,255);\n                display: flex;\n                justify-content: flex-end;\n                gap: 0.5rem;\n            }\n            \n            .tab-options div{\n                width: 2.5rem;\n                height: 2.5rem;\n                fill: white;\n            }\n            \n            .ficha .tab-information {\n                display: flex;\n                flex-direction: column;\n                background-color: rgba(113,139,224,255);\n                padding: 15px;\n            }\n            \n            .tab-information div {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n            \n            .tab-information div p {\n                color: white;\n                font-size: 1.1rem;\n            }\n            \n            .tab-information div .label {\n                font-weight: 800;\n            }\n        </style>\n    \n        <div class="ficha">\n            <div class="tab-options">\n                <div class="edit">\n                    <button id="editButton" >\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" /></svg>\n                    </button>\n                </div>\n                <div class="delete">\n                    <button id="deleteButton">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>\n                    </button>  \n                </div>\n            </div>\n            <div class="tab-information">\n                <div>\n                    <p class="label">Nombre:</p>\n                    <p class="value" id="nameValue"><slot name="name">Indefinido</slot></p>\n                </div>\n                <div>\n                    <p class="label">Email:</p>\n                    <p class="value" id="emailValue"><slot name="email">Indefinido</slot></p>\n                </div> \n            </div>\n        </div>\n                    \n        ';const n=this.shadow.querySelector("#deleteButton"),e=this.shadow.querySelector("#editButton");n.addEventListener("click",(()=>{const n=this.getAttribute("id"),e=new CustomEvent("add-active",{detail:{componentId:n}});document.dispatchEvent(e)})),e.addEventListener("click",(()=>{const n=this.getAttribute("id"),e=new CustomEvent("editRow",{detail:{componentId:n}});document.dispatchEvent(e)}))}}customElements.define("ficha-component",n)},777:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}submitForm=n=>{const e=new CustomEvent("filter-table",{detail:{data:n}});document.dispatchEvent(e)};render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n                list-style: none;\n            }\n\n            .filter-section {\n                position: relative;\n                margin-bottom: 1rem;\n                overflow: hidden;\n            }\n\n            .filter-button {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                padding: .5rem 0;\n                cursor: pointer;\n                background-color: white;\n                transition: 0.5s;\n            }\n\n            .filter-button.active {\n                margin-top: 10rem\n            }\n            \n            .filter-image {\n                transition: 0.5s\n            }\n\n            .filter-image svg {\n                width: 2.5rem;\n                fill: rgba(109,183,243,255);\n                \n            }\n\n            .filter-image.active {\n                transform: rotateY(360deg)\n            }\n            .filter-image.colorActive  svg{\n                fill: #04B911;\n            }\n            .filter-form {\n                width: 100%;\n                position: absolute;\n                z-index: -1\n            }\n\n            .filter-form.active {\n                z-index: 0\n            }\n\n            hero {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n\n            .filter-form form {\n                padding: 1rem 0;\n                display: flex;\n                justify-content: center;\n                gap: 4rem;\n            }\n\n            form label {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n\n            form input {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                font-size: 1.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n                padding: 0.2rem;\n                padding-left: 1rem;\n            }\n\n        </style>\n        \n        <section class="filter-section">\n            <div class="filter-form">\n                <div>\n                    <hero>Filtra los registros:</hero>\n                </div>\n                <form id="filter-form">\n                    <div class="campo">\n                        <label>Nombre: </label>\n                        <input name="name" />\n                    </div>\n                    <div class="campo">\n                        <label>Email: </label>\n                        <input name="email" />\n                    </div>\n                </form>\n            </div>\n            <div class="filter-button">\n                <div class="filter-image">\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z" /></svg>\n                </div>\n            </div>\n        </section>\n        ',this.renderFilter()}renderFilter=()=>{const n=this.shadow.querySelector(".filter-button");n.addEventListener("click",(()=>{const e=this.shadow.querySelector(".filter-form"),t=this.shadow.querySelector(".filter-image");n.classList.toggle("active"),t.classList.toggle("active"),e.classList.contains("active")?(e.classList.remove("active"),setTimeout((()=>{t.innerHTML=' <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z" /></svg>',t.classList.remove("colorActive")}),150)):(setTimeout((()=>{e.classList.add("active")}),300),setTimeout((()=>{t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 12V19.88C12.04 20.18 11.94 20.5 11.71 20.71C11.32 21.1 10.69 21.1 10.3 20.71L8.29 18.7C8.06 18.47 7.96 18.16 8 17.87V12H7.97L2.21 4.62C1.87 4.19 1.95 3.56 2.38 3.22C2.57 3.08 2.78 3 3 3H17C17.22 3 17.43 3.08 17.62 3.22C18.05 3.56 18.13 4.19 17.79 4.62L12.03 12H12M17.75 21L15 18L16.16 16.84L17.75 18.43L21.34 14.84L22.5 16.25L17.75 21" /></svg>',t.classList.add("colorActive")}),150))})),n.addEventListener("click",(()=>{if(!n.classList.contains("active")){const n=this.shadow.querySelector("#filter-form"),e=Object.fromEntries(new FormData(n));for(const n in e)""===e[n]&&delete e[n];setTimeout((()=>{n.reset()}),500),this.submitForm(e)}}))}}customElements.define("filter-component",n)},761:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            header{\n                display: flex;\n                justify-content: space-between;\n                margin: 2rem 0rem;\n                align-items: center;\n            }\n            header div{\n                display: flex;\n            }\n            \n            .centro {\n                margin-right: 10rem;\n            }\n        \n            header div h1 {\n                color: white;\n                font-size: 2.5rem;\n            }\n            \n            .hamburger-button {\n                width: 2rem;\n                height: 2.5rem;\n                fill: white;\n                display: flexs;\n                flex-direction: column;\n                justify-content: center;\n                gap: 0.5rem;\n                cursor: pointer;\n            }\n            \n            .hamburger-button span {\n                width: 100%;\n                height: 0.2rem;\n                background-color: white;\n                transition: 0.2s ease-in;\n            }\n            \n            .hamburger-button.active .top{\n                transform: translateY(11px) rotate(45deg)\n            }\n            \n            .hamburger-button.active .mid{\n                transform:  scale(0%)\n            }\n            .hamburger-button.active .bot{\n                transform: translateY(-11px) rotate(-45deg)\n            }\n\n        </style>\n        \n        <header>\n            <div>\n                <h1>Guillemrima</h1>\n            </div>\n            <div class="centro">\n                <h1>Clientes</h1>\n            </div>\n            <div class="hamburger-button">\n                <span class="top"></span>\n                <span class="mid"></span>\n                <span class="bot"></span>\n            </div>\n        </header>\n        ';const n=this.shadow.querySelector(".hamburger-button");n.addEventListener("click",(()=>{const e=new CustomEvent("show-lateral-menu");document.dispatchEvent(e),n.classList.toggle("active")}))}}customElements.define("header-component",n)},445:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <div class="hamburger-tab">\n                <ul>\n                    <li value="users">\n                        Users\n                    </li>\n                    <li value="faqs">\n                        Faqs\n                    </li>\n                </ul>\n            </div>\n\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n\n            ul{\n                list-style: none;\n            }\n\n            .hamburger-tab {\n                background-color: #6db7f3;\n                position: absolute;\n                display:none;\n                top: 0;\n                right: 0;\n                width: 20%;\n                margin-top: 5.5%;\n            }\n\n            .hamburger-tab ul {\n                width: 100%\n            }\n            .hamburger-tab li {\n                width:100%;\n                color: white;\n                padding: 1rem 0.5rem;\n                cursor:pointer;\n                font-size: 1.5rem\n            }\n\n            .hamburger-tab li:hover {\n                background-color: white;\n                color: #6db7f3;\n            }\n\n            .hamburger-tab.active {\n                display: flex;\n                position: absolute;\n                top: 0;\n            }\n\n\n        </style>\n        ',this.renderFunctions(),this.apiFunctions()}renderFunctions=()=>{const n=this.shadow.querySelector(".hamburger-tab");document.addEventListener("show-lateral-menu",(()=>{n.classList.toggle("active")}))};apiFunctions=()=>{this.shadow.querySelectorAll("li").forEach((n=>{n.addEventListener("click",(n=>{const e=n.target.getAttribute("value"),t=new CustomEvent("change-table",{detail:e});document.dispatchEvent(t)}))}))}}customElements.define("lateral-menu-component",n)},984:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.modalContent="",this.idFicha="",this.name="",this.image=null,this.render()}connectedCallback(){document.addEventListener("add-active",(n=>{this.name=n.detail.name,this.image=n.detail.image,this.renderModalContent(n)})),document.addEventListener("remove-active",(n=>{this.removeActive(n)}))}renderModalContent=n=>{n.detail.componentId?(this.modalContent="delete-content",this.fichaId=n.detail.componentId):n.detail.detail&&(this.modalContent=n.detail.detail),this.render()};removeActive=n=>{("delete-component"===n.detail.detail||"image-component"===n.detail.detail)&&(this.modalContent=""),this.render()};render(){this.shadow.innerHTML=`\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            list-style: none;\n        }\n        img {\n            width: 100%;\n            height: 100%;\n        }\n        .modal-section {\n            position: fixed;\n            top: 0;\n            width: 100%;\n            height: 100vh;\n            display: none;\n            justify-content: center;\n            align-items: center;\n        }\n        \n        .modal-section::after {\n            content: "";\n            position: absolute;\n        }       \n        .modal-section .modal { \n            background-color: rgb(93, 93, 93);\n            display: grid;\n            grid-template-columns: 50% 50%;\n            box-shadow: 10px 10px 58px -6px rgba(0,0,0,0.75);\n            position: relative;\n            overflow: hidden;\n            animation: animation 0.15s ease-in\n        }\n        \n        .close-button {\n            position: absolute;\n            width: 25px;\n            height: 25px;\n            right: 0;\n            top: 0;\n            margin: 10px;\n            cursor: pointer;\n            filter: invert(0.5) sepia(0) saturate(40) hue-rotate(10deg);\n            z-index: 999;\n        }\n        \n        .close-button:hover {\n            filter: invert(0.5) sepia(1) saturate(40) hue-rotate(10deg);\n        }\n\n        .modal-section.active-delete-modal {\n            display : flex;\n            z-index: 999;    \n\n        }\n        .modal-section.active-image-modal {\n            display : flex;\n            z-index: 999;       \n\n        }\n        .modal-section.active-delete-modal .modal {\n            width: 20%;\n            height: 30vh;\n\n        }\n        .modal-section.active-image-modal .modal {\n            width: 90%;\n            height: 90vh;\n\n        }\n\n        @keyframes animation {\n            0% {\n                transform: scale(100%)\n            }\n            50% {\n                transform: scale(110%)\n            }\n\n        }\n        </style>\n        <section class="modal-section ${"delete-content"===this.modalContent?"active-delete-modal":this.modalContent?"active-image-modal":"default-modal"}" id="modal">\n        <div class="modal" >\n            ${"delete-content"===this.modalContent?`<delete-component id=${this.fichaId}></delete-component>`:`<image-form-component name="${this.name}" current-image='${JSON.stringify(this.image)}'></image-form-component>`}          \n        </div>\n    </section>\n        `}}customElements.define("modal-component",n)},459:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.data}static get observedAttributes(){return["route"]}async attributeChangedCallback(n,e,t){await this.loadData(t),await this.render()}async loadData(n){const e=`http://localhost:8080${n}`,t=await fetch(e);this.data=await t.json()}render(){const n=this.data.map((n=>`\n                <tr>\n                    <td>${n.nombre}</td>\n                    <td>${n.categoria.nombre}</td>\n                    <td>${n.precio[0].precio_base}</td>\n                    <td>${n.precio[0].iva.tipo}</td>\n                </tr>\n            `));this.shadow.innerHTML=`\n            <div>\n                <table>\n                    <tr>\n                        <th>Producto</th>\n                        <th>Categoría</th>\n                        <th>Precio Base</th>\n                        <th>Tipo de IVA</th>\n                    </tr>\n                    ${n.join("")}\n                <table>\n            </div>\n\n            <style>\n                *{\n                    text-align: center;\n                }\n                div {\n                    width: 100%;\n                    height: 100vh;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                }\n\n                table {\n                    background-color: white;\n                }\n\n                tr {\n                    background-color: #F1F1F1;\n                }\n\n                tr th {\n                    background-color: #DBDBDB;\n                }\n            </style>\n        `}}customElements.define("products-component",n)},506:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}returnToLogin=()=>{window.location.href="http://127.0.0.1:5500/client/admin/login.html"};render(){this.shadow.innerHTML='\n        <div class="return-button-container">\n            <button id="return-button">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19,3H5C3.89,3 3,3.89 3,5V9H5V5H19V19H5V15H3V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10.08,15.58L11.5,17L16.5,12L11.5,7L10.08,8.41L12.67,11H3V13H12.67L10.08,15.58Z" /></svg>\n            </button>\n        </div>\n          \n        <style>\n            .return-button-container {\n                width: 3rem;\n                position: fixed;\n                bottom: 0;\n                right: 0;\n                margin: 2rem 4rem\n            }\n\n            .return-button-container button {\n                width: 100%;\n                background-color: transparent;\n                cursor: pointer\n            }\n\n            .return-button-container button svg {\n                fill: white\n            }\n        </style>\n        ',this.shadow.querySelector("#return-button").addEventListener("click",(()=>{this.returnToLogin()}))}}customElements.define("return-component",n)}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var o=e[i]={exports:{}};return n[i](o,o.exports,t),o.exports}(()=>{"use strict";t(761),t(777);const n="https://guillemrima.com";class e extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.data=[],this.page=null,this.lastPage="",this.filter=null}static get observedAttributes(){return["url"]}async connectedCallback(){document.addEventListener("refresh-table",(async n=>{await this.loadData(),await this.render()})),document.addEventListener("filter-table",(async n=>{this.filter=n.detail.data,this.page=null,await this.loadData(),await this.render()}))}async attributeChangedCallback(n,e,t){await this.loadData(),await this.render()}async loadData(){let e=`${n}/api/admin/users/`,t=null==this.filter?"?":"&";null!=this.filter&&(e=this.filterUrl(e)),null!=this.page&&(e=`${e}${t}page=${this.page}`);try{const n=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+sessionStorage.getItem("accessToken")}});this.data=await n.json(),this.page=this.data.meta.currentPage,this.lastPage=this.data.meta.pages}catch(n){console.log(n)}}changePage=async()=>{const n=this.shadow.querySelector(".nextPageButton"),e=this.shadow.querySelector(".prevPageButton"),t=this.shadow.querySelector(".firstPageButton"),i=this.shadow.querySelector(".lastPageButton");n.addEventListener("click",(async()=>{this.page<this.lastPage&&(this.page=Number(this.page)+1,await this.loadData(),await this.render())})),e.addEventListener("click",(async()=>{this.page>1&&(this.page=Number(this.page-1),await this.loadData(),await this.render())})),t.addEventListener("click",(async()=>{this.page=1,await this.loadData(),await this.render()})),i.addEventListener("click",(async()=>{this.page=this.lastPage,await this.loadData(),await this.render()})),1==this.page&&(e.classList.add("inactive"),t.classList.add("inactive")),this.page==this.lastPage&&(n.classList.add("inactive"),i.classList.add("inactive"))};filterUrl=n=>{const e=new URLSearchParams;for(const n in this.filter)e.append(n,this.filter[n]);return`${n}?${e.toString()}`};async render(){const n=this.data.rows.map((n=>`<ficha-component id="${n.id}">\n                            <span slot="name">${n.name}</span>\n                            <span slot="email">${n.email}</span>\n                        </ficha-component>`));this.shadow.innerHTML=`\n        <section class="tab-section">\n            <div class="tab-list">  \n                <ul>\n                    <li class="ficha-element">\n                    ${n.join("")}    \n                    </li>\n                </ul>\n            </div>\n            <div class="tab-page">\n                <button class="firstPageButton">Primera</button>\n                <button id="prevPageButton" class="prevPageButton" >Anterior</button>\n                <div class="page">${this.page}</div>\n                <button id="nextPageButton" class="nextPageButton">Siguiente</button>\n                <button class="lastPageButton">Última</button>\n            </div>\n        </section>\n\n\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                border: none;\n                background-color:transparent;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .tab-section {\n                width:100%;\n            }\n            \n            .tab-list{\n                width:100%;\n            }\n\n            .tab-section ul li {\n                display: flex;\n                flex-direction: column;\n                gap: 1rem;\n            }\n\n            .tab-element {\n                display: flex;\n                flex-direction: column;\n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n\n            }\n\n            .tab-element .tab-options {\n                background-color: rgba(109,183,243,255);\n                display: flex;\n                justify-content: flex-end;\n                gap: 0.5rem;\n            }\n            \n            .tab-options div{\n                width: 2.5rem;\n                height: 2.5rem;\n                fill: white;\n            }\n            \n            .tab-element .tab-information {\n                display: flex;\n                flex-direction: column;\n                background-color: rgba(113,139,224,255);\n                padding: 15px;\n            }\n            \n            .tab-information div {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n            \n            .tab-information div p {\n                color: white;\n                font-size: 1.1rem;\n            }\n            \n            .tab-information div .label {\n                font-weight: 800;\n            }\n\n            .tab-page {\n                margin-top: 10px;\n                display: flex;\n                justify-content: space-around;\n                gap: 1rem\n            }\n\n            .tab-page button {\n                background-color: white;\n                padding: 5px;\n                font-size: 1.2rem;\n            }\n\n            .nextPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .prevPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .firstPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .lastPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .page {\n                width:50%;\n                background-color: white;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                font-weight: 600;\n            }\n        </style>\n            \n        `,this.changePage()}}customElements.define("tab-component",e);class i extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.isFormValid=!1,this.formImages=[]}async connectedCallback(){await this.render(),document.addEventListener("editRow",(async n=>{this.EditTab(n)})),document.addEventListener("sendImage",(n=>{const e=n.detail;this.formImages.push(e)})),document.addEventListener("deleteImage",(n=>{const e=n.detail.image;this.formImages.forEach(((n,t)=>{n.filename===e.name&&this.formImages.splice(t,1)}))}))}loadData=async e=>{try{const t=await fetch(`${n}/api/admin/users/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+sessionStorage.getItem("accessToken")}});return this.data=await t.json(),this.data}catch(n){console.log(n)}};submitData=async e=>{const t=Object.fromEntries(new FormData(e));if(this.validatePassword(t.password,t.passwordConfirmed)){this.formImages.length>0&&(t.images=this.formImages);const i=this.data?"PUT":"POST",a=`${n}/api/admin/users`,o=this.data?`${a}/${this.data.id}`:a;fetch(o,{method:i,headers:{"Content-Type":"application/json",Authorization:"Bearer "+sessionStorage.getItem("accessToken")},body:JSON.stringify(t)}).then((n=>{if(!n.ok)return void n.json().then((n=>{const e=n.message[0].message;this.showError(e)}));e.reset(),this.formImages=[],this.data="";const t=this.shadow.querySelector("#errorDiv");return t&&this.shadow.querySelector(".form-container").removeChild(t),n.json()})).then((n=>{const t=new CustomEvent("refresh-table");document.dispatchEvent(t),e.reset(),this.data=""})).catch((n=>{console.error(n)}))}else{const n="Las contraseñas no coinciden";this.showError(n)}};showError=n=>{const e=document.createElement("div"),t=document.createElement("p");t.textContent=n,e.appendChild(t),e.classList.add("error"),e.id="errorDiv";const i=this.shadow.querySelector(".form-container"),a=this.shadow.querySelector("#errorDiv");a&&i.removeChild(a),i.prepend(e)};EditTab=async n=>{const e=n.detail.componentId,t=await this.loadData(e);document.dispatchEvent(new CustomEvent("editImage",{detail:t.images})),this.shadow.getElementById("name").value=t.name,this.shadow.getElementById("email").value=t.email};validatePassword=(n,e)=>n===e;render(){this.shadow.innerHTML='\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                background-color: transparent;\n                border: none;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .form-section {\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                gap: 2rem;\n            }\n            \n            .form-section .form-selector {\n                width: 100%;\n                height: 5vh;\n                background-color: white;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            \n            .form-selector .selector {\n                display: flex;\n                height: 100%;\n            }\n            \n            .selector div {\n                height: 100%;\n                width: 100%;\n                padding: 0 1rem;\n            }\n            \n            .selector div p {\n                color:rgba(133,133,133,255);\n                font-size: 1rem;\n                font-weight: 600;\n            }\n            \n            .selector div.active {\n                background-color: rgba(109,183,243,255);\n            }\n            \n            .selector div.active p {\n                color: white;\n            }\n            \n            .form-selector .options {\n                height: 100%;\n                display: flex;\n                gap: 1rem;\n                align-items: center;\n                margin-right: 10px;\n            }\n            \n            .options div {\n                height: 2.5rem;\n                width: 2.5rem;\n                display: flex;\n            }\n            \n            .options div button {\n                width: 100%;\n                height: 100%;\n            }\n            \n            .options div svg {\n                fill: rgba(109,183,243,255);\n            }\n            \n            .profile-form {\n                display: none;\n            }\n            \n            .profile-form.active {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                width: 100%;\n                gap: 1rem;\n            }\n            \n            form div {\n                display: flex;\n                flex-direction: column;\n                gap: 0.5rem;\n            }\n            \n            form div label {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n            \n            form div input {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                font-size: 1.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n                padding: 0.2rem;\n                padding-left: 1rem;\n            }\n\n            .error {\n                background-color: white;\n                border-left: 5px solid red;\n            }\n            .error p {\n                color: red;\n                font-size: 1.5rem;\n                font-weight: 600;\n                margin: 10px\n            }\n        </style>\n        \n        <section class="form-section">\n            <div class="form-selector">\n                <div class="selector">\n                    <div class="active" data-form="principal">\n                        <button>\n                            <p>Principal</p>\n                        </button>\n                    </div>\n                    <div data-form="image">\n                        <button>\n                            <p>Imágenes</p>\n                        </button>\n                    </div>\n                </div>\n                <div class="options">\n                    <div>\n                        <button type="button" id="resetButton">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>broom</title><path d="M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z" /></svg>                        </button>\n                    </div>\n                    <div>\n                        <button type="submit" id="submitButton">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>content-save</title><path d="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" /></svg>                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class="form-container">\n                <form id="form">\n                    <div class="profile-form active " data-form="principal" id="form-principal">\n                            <div>\n                                <label>Nombre</label>\n                                <input name="name" type="text" id=\'name\'></input>\n                            </div>\n                            <div>\n                                <label for="email">Email</label>\n                                <input name="email" type="text" id=\'email\'></input>\n                            </div>\n                            <div>\n                                <label for="password">Contraseña</label>\n                                <input name="password" type="text"></input>\n                            </div>\n                            <div>\n                                <label>Confirme contraseña</label>\n                                <input name="passwordConfirmed" type="text"></input>\n                            </div>\n                    </div>\n                    <div class="profile-form " data-form="image">\n                        <div class="input-image">\n                            <label>Imagen de Avatar</label>\n                                <image-component name="avatar"></image-component>\n                        </div>\n                        <div class="input-image">\n                            <label>Imagen de Producto</label>\n                                <image-component name="producto"></image-component>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </section>\n        ',this.renderTabs()}renderTabs=async()=>{const n=this.shadow.querySelector(".form-container").querySelectorAll(".profile-form"),e=this.shadow.querySelector("#form"),t=this.shadow.querySelector("#resetButton"),i=this.shadow.querySelector(".selector").querySelectorAll("div"),a=this.shadow.querySelector("#submitButton");t.addEventListener("click",(()=>{e.reset(),document.dispatchEvent(new CustomEvent("reset-image"))})),i.forEach((e=>{const t=e.dataset.form,a=new CustomEvent("show-form",{detail:t});e.addEventListener("click",(()=>{document.dispatchEvent(a);for(let n=0;n<i.length;n++)i[n].classList.remove("active");e.classList.add("active"),n.forEach((n=>{n.dataset.form==t?n.classList.add("active"):n.classList.remove("active")}))}))})),a.addEventListener("click",(n=>{n.preventDefault(),this.submitData(e)}))}}customElements.define("form-component",i),t(913),t(445),t(984);class a extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render(),this.id=""}static get observedAttributes(){return["id"]}async attributeChangedCallback(n,e,t){"id"===n&&e!==t&&(this.id=t)}render(){this.shadow.innerHTML='\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        .erase-alert {\n            width: 200%;\n            height: 100%;\n            display:flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            gap:1rem;\n            background-color: white;\n        }\n\n        .erase-image {\n            width: 25%;\n        }\n\n        .erase-image svg {\n            fill: orange;\n        }    \n        .erase-information {\n            text-align: center;\n            display:flex;\n            flex-direction: column;\n        }\n\n        .erase-information div p {\n            font-size: 0.8rem;\n            color: grey;\n        }\n\n        .erase-options {\n            display: flex;\n            justify-content: center;\n            gap:1rem;\n            width: 80%\n        }\n\n        .erase-options div {\n            width: 50%;\n        }\n\n        button {\n            padding: 0.5rem;\n            width: 100%;\n            border: none;\n            cursor: pointer;\n        }\n\n        button:hover {\n            background-color: #738c97;\n        }\n\n        .cancel-erase {\n            color: white;\n            background-color:#989898;\n        }\n\n        .accept-erase {\n            color: white;\n            background-color:#ff323f;\n        }\n\n        </style>\n\n            <div class="erase-alert">\n                <div class="erase-image">\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>alert-circle-outline</title><path d="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" /></svg>\n                </div>\n                \n                <div class="erase-information">\n                    <div>\n                        <h3>¡Este perfil será eliminado permanentemente!</h3>\n                    </div>\n                    <div>\n                        <p>¿Estás seguro que quieres eliminarlo?</p>\n                    </div>\n                </div>\n\n                <div class="erase-options">\n                    <div>\n                        <button type="button" class="cancel-erase" value="cancel">Cancelar proceso</button>\n                    </div>\n                    <div>\n                        <button type="button" class="accept-erase" value="accept">Eliminar Perfil</button>\n                    </div>\n                </div>\n            </div>\n        ',this.renderTabs()}renderTabs=async()=>{this.shadow.querySelectorAll("button").forEach((e=>{e.addEventListener("click",(async e=>{if("accept"===e.target.value){try{const e=await fetch(`${n}/api/admin/users/${this.id}`,{method:"DELETE",headers:{Authorization:"Bearer "+sessionStorage.getItem("accessToken")}});this.data=await e.json(),this.id=""}catch(n){console.log(n)}const e=new CustomEvent("refresh-table",{detail:{fichaId:this.id}});document.dispatchEvent(e)}const t=new CustomEvent("remove-active",{detail:{detail:"delete-component"}});document.dispatchEvent(t)}))}))}}customElements.define("delete-component",a);class o extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}submitForm=()=>{const e=this.shadow.querySelector("#loginForm");e.addEventListener("submit",(t=>{t.preventDefault();const i=Object.fromEntries(new FormData(e));fetch(`${n}/api/auth/users/signin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then((n=>{n.ok?n.json().then((n=>{const e=n.accessToken;sessionStorage.setItem("accessToken",e),this.redirectPanel(n)})):n.json().then((n=>{this.showError(n),console.log(n.message)}))}))}))};showError=n=>{const e=n.message,t=this.shadow.querySelector(".login-panel");t.querySelector(".error-container")&&t.querySelector(".error-container").remove();const i=document.createElement("div"),a=document.createElement("p");a.innerHTML=e,i.appendChild(a),t.appendChild(i),i.classList.add("error-container")};redirectPanel=e=>{const t=`¡Bievenido ${e.name}!`,i=this.shadow.querySelector(".login-panel");i.querySelector(".error-container")&&i.querySelector(".error-container").remove();const a=document.createElement("div"),o=document.createElement("p");o.innerHTML=t,a.appendChild(o),i.appendChild(a),a.classList.add("success-container"),setTimeout((()=>{window.location.href=`${n}/admin.html`}),500)};render(){this.shadow.innerHTML='\n        <style>\n            * {\n              padding: 0;\n              margin: 0;\n              box-sizing: border-box\n            }\n            .login-panel {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                height: 100vh;\n              }\n              \n              .login-panel form {\n                border: 1px solid white;\n                display:flex;\n                flex-direction: column;\n                gap: 1rem;\n                padding: 3rem ;\n                color: white;                \n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n              }\n\n              .campo {\n                display:flex;\n                flex-direction:column;\n                gap: 0.5rem\n              }\n\n              form legend {\n                font-weight: 800;\n              }\n\n              input {\n                background-color: rgba(113,139,224,255);\n                padding:0.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n            }\n\n            button {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                color: white;\n                font-weight: 800;\n                padding: 1rem;\n                border: none;\n                border: 1px solid white;\n                cursor: pointer;\n            }\n            .title {\n               color: white;\n            }\n            \n            .error-container {\n              background-color: white;\n              border-left: 5px solid red;\n              padding: 1rem 0.5rem;\n              margin-top: 2rem;\n            }\n            .error-container p {\n              color: red;\n              font-weight: 600\n            }\n\n            .success-container {\n              background-color:white;\n              border-left: 5px solid green;\n              padding: 1rem 0.5rem;\n              margin-top: 2rem;\n            }\n            .success-container p {\n              color: green;\n              font-weight: 600\n            }\n            \n        </style>\n        <div class="login-panel">\n            <form id=\'loginForm\'>\n                <legend>ADMIN LOGIN:</legend>\n\n                <div class=\'campo\'>\n                    <label for="email">Email</label>\n                    <input name="email"></input>\n                </div>\n\n                <div class=\'campo\'>\n                    <label for="password" type="email">Password</label>\n                    <input name="password" type="password"></input>\n                </div>\n\n                <div class=\'submit\'>\n                    <button>LOGIN</button>\n                </div>\n\n            </form>\n        </div>\n        ',this.submitForm()}}customElements.define("login-component",o);class s extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.image=null,this.name="",this.render()}connectedCallback(){this.name=this.getAttribute("name"),document.addEventListener("select-image",(n=>{n.detail.name===this.name&&(this.image=n.detail.image,this.render())})),document.addEventListener("refresh-table",(()=>{this.image=null,this.render()})),document.addEventListener("editImage",(async n=>{const e=n.detail?n.detail:null;0===e.length?this.image=null:e.forEach((n=>{n.name===this.name&&(this.image={},this.image.name=n.originalFilename,this.image.alt=n.alt,this.image.title=n.title)})),this.render()})),document.addEventListener("reset-image",(async n=>{this.image=null,this.render()}))}render(){this.shadow.innerHTML=`\n            <div class="image-section">\n                    ${null!=this.image?`\n                       <button type="button" id="button-form" class="button-image">\n                            <img src="${n}/api/admin/images/${this.image.name}" alt="${this.image.alt}" title="${this.image.title}"  class="image-element"/>\n                            \n                        </button>\n                        <div class="delete-image">\n                            <button id="delete-button">\n                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z" /></svg>\n                                <p>Eliminar</p>\n                            </button>\n                        </div>\n                       `:'\n                    <button type="button" id="button-form" class="button-select-image">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" /></svg>\n                    </button>\n                    '}\n            </div>\n\n            <style>\n                *{\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }   \n                .image-section {\n                    position: relative;\n                    width: 135px;\n                    height: 135px;\n                    display: flex; \n                    justify-content: center;               \n                }\n                .image-section .button-select-image {\n                    width: 100%;\n                    height: 100%;\n                    background-color: transparent;\n                    border: none;\n                    cursor: pointer;\n                    border: 2px solid white\n                }\n                \n                .button-image {\n                    z-index: 2;\n                    background-color: transparent;\n                    border: none;\n                    cursor: pointer;\n                }\n\n                .image-section .button-select-image svg {\n                    cursor: pointer;\n                    fill: white;\n                }\n                .delete-image {\n                    cursor: pointer;\n                    position: absolute;\n                    bottom: -5px;\n                    right: -25px;\n                    background-color: #2596be;\n                    padding: 2px 10px;\n                    border-radius: 10px; \n                    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n                    transition: all 0.1s;\n                    z-index: 3;\n                }\n                .delete-image:hover {\n                    transform: scale(1.1);\n                    background-color:red;\n                    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n                }\n                .delete-image button {\n                    all:unset;\n                    display: flex;\n                    align-items: center;\n                }\n                .delete-image p {\n                    color: white;\n                    font-size: 12px;\n                    font-weight: bold;\n                }\n                .delete-image svg {\n                    width: 20px;\n                    fill: white;\n                }\n            </style>\n        `,this.shadow.querySelector("#button-form").addEventListener("click",(()=>{const n={name:this.name,detail:"image-component"};null!==this.image&&(n.image=this.image);const e=new CustomEvent("add-active",{detail:n});document.dispatchEvent(e)})),null!=this.image&&this.shadow.querySelector("#delete-button").addEventListener("click",(()=>{document.dispatchEvent(new CustomEvent("deleteImage",{detail:{image:this.image}})),this.image=null,this.render()}))}}customElements.define("image-component",s);class r extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.fileOption="upload-option",this.images,this.currentImage,this.name=[],this.page="",this.lastPage="",this.confirmDeleteImage=0}async connectedCallback(){this.name=this.getAttribute("name"),"undefined"!=this.getAttribute("current-image")&&(this.currentImage=JSON.parse(this.getAttribute("current-image")),this.fileOption="select-option",await this.getImages()),this.render()}selectImageOption=()=>{const n=this.shadow.querySelectorAll(".image-option");n.forEach((e=>{e.addEventListener("click",(async()=>{const t=e.dataset.option;this.fileOption=t,"select-option"===this.fileOption&&await this.getImages(),n.forEach((n=>{n.classList.remove("active")})),e.classList.add("active"),this.render()}))}))};handleFileUpload=()=>{if("upload-option"===this.fileOption){const n=this.shadow.querySelector("#file-form"),e=this.shadow.querySelector(".file-input");n.addEventListener("change",(n=>{if(n.preventDefault(),0===e.files.length)return;const t=e.files[0];this.sendFile(t),this.fileOption="select-option",this.render()}))}};sendFile=async e=>{const t=new FormData;t.append("file",e);const i=await fetch(`${n}/api/admin/images`,{method:"POST",body:t,headers:{Authorization:"Bearer "+sessionStorage.getItem("accessToken")}});await i.json(),this.shadow.querySelector(".image-option[data-option='select-option']").click()};selectImage=()=>{const n=this.shadow.querySelectorAll(".image-container"),e=this.shadow.querySelector("#form"),t=e.querySelector("#name"),i=e.querySelector("#alt"),a=e.querySelector("#title");n.length&&n.forEach((e=>{e.addEventListener("click",(()=>{n.forEach((n=>n.classList.remove("selected"))),e.classList.add("selected"),this.currentImage=e.getAttribute("name"),t.value=e.querySelector("img").alt,i.value=e.querySelector("img").alt}))})),this.currentImage&&(t.value=this.currentImage.name,i.value=this.currentImage.name,a.value=this.currentImage.title),e.addEventListener("submit",(n=>{n.preventDefault();const t=Object.fromEntries(new FormData(e)),i=new CustomEvent("select-image",{detail:{name:this.name,image:t}});if(document.dispatchEvent(new CustomEvent("sendImage",{detail:{name:this.name,filename:t.name,alt:t.alt,title:t.title}})),Object.values(t).some((n=>""!==n))){const n=new CustomEvent("remove-active",{detail:{detail:"image-component"}});document.dispatchEvent(n),document.dispatchEvent(i)}this.images=[]}))};getImages=async()=>{const e=await fetch(`${n}/api/admin/images?page=${this.page}`,{method:"GET",headers:{Authorization:"Bearer "+sessionStorage.getItem("accessToken")}}),t=await e.json();this.images=t.thumbnails,this.lastPage=t.totalPages,this.page=t.currentPage};changePage=async()=>{if("select-option"===this.fileOption){const n=this.shadow.querySelector(".nextPageButton"),e=this.shadow.querySelector(".prevPageButton"),t=this.shadow.querySelector(".firstPageButton"),i=this.shadow.querySelector(".lastPageButton");n.addEventListener("click",(async()=>{this.page<this.lastPage&&(this.page=Number(this.page)+1,await this.getImages(),await this.render())})),e.addEventListener("click",(async()=>{this.page>1&&(this.page=Number(this.page-1),await this.getImages(),await this.render())})),t.addEventListener("click",(async()=>{this.page=1,await this.getImages(),await this.render()})),i.addEventListener("click",(async()=>{this.page=this.lastPage,await this.getImages(),await this.render()})),1==this.page&&(e.classList.add("inactive"),t.classList.add("inactive")),this.page==this.lastPage&&(n.classList.add("inactive"),i.classList.add("inactive"))}};deleteImage=async()=>{const e=this.confirmDeleteImage,t=await fetch(`${n}/api/admin/images/${this.currentImage}/?confirmation=${e}`,{method:"DELETE",headers:{Authorization:"Bearer "+sessionStorage.getItem("accessToken")}});return await t.json()};render(){const e="upload-option"===this.fileOption?"active":"",t="select-option"===this.fileOption?"active":"";let i="";this.images&&this.images.forEach(((e,t)=>{let a=`\n          <div class="image-container" name="${e}">\n            <img src="${n}/api/admin/images/${e}" alt="${e}">\n          </div>\n        `;null==this.currentImage&&null==this.currentImage?0===t&&(a=a.replace('class="image-container"','class="image-container selected"')):this.currentImage.name===e&&(a=a.replace('class="image-container"','class="image-container selected"')),i+=a})),this.shadow.innerHTML=`\n    <div class="image-form-container">\n    <div class="title">\n      <h3>Añade Imágenes</h3>\n      <div class="exit">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />\n        </svg>\n      </div>\n    </div>\n  \n    <div class="image-options">\n      <ul>\n        <li class="image-option ${e}" data-option="upload-option">\n          <p>Subir archivo</p>\n        </li>\n        <li class="image-option ${t}" data-option="select-option">\n          <p>Biblioteca de medios</p>\n        </li>\n      </ul>\n    </div>\n  \n    <div class="image-display">\n      <div class="image-selection">\n        ${"upload-option"===this.fileOption?'\n          <div class="image-input">\n            <form id="file-form">\n              <input type="file" class="file-input" multiple="multiple" name="image" />\n            </form>\n          </div>\n        ':`\n          <div class="gallery">\n            ${i}\n            <div class="tab-page">\n              <button class="firstPageButton">Primera</button>\n              <button id="prevPageButton" class="prevPageButton" >Anterior</button>\n              <div class="page">${this.page}</div>\n              <button id="nextPageButton" class="nextPageButton">Siguiente</button>\n              <button class="lastPageButton">Última</button>\n            </div>\n          </div>\n        `}\n      </div>\n      <div class="image-info">\n        <div class="info-form">\n          <form id="form" class="form">\n\n            <div class="input-container">\n              <label htmlFor="name">Nombre del archivo:</label>\n              <input type="text" name="name" id="name" required readOnly/>\n            </div>\n\n            <div class="input-container">\n              <label htmlFor="alt">Texto alternativo:</label>\n              <input type="text" name="alt" id="alt" required/>\n            </div>\n            \n            <div class="input-container">\n              <label htmlFor="name">Título de la imagen:</label>\n              <textarea class="textarea" name="title" id="title" required></textarea>\n            </div>\n\n            <div class="alert-container">\n            </div>\n\n            <div class="buttons-container">\n            <div class="select-button">\n              <button>Seleccionar Imagen</button>\n            </div>\n\n            <div class="delete-button">\n              <button type="button" id="delete-button">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n                  <path d="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z" />\n                </svg>\n              </button>\n            </div>\n          </div>\n          \n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n      <style>\n      *{\n          margin: 0;\n          padding: 0;\n          box-sizing: border-box;\n      }\n\n    ::-webkit-scrollbar {\n      width: 8px; \n    }\n\n    ::-webkit-scrollbar-track {\n      background-color: #F3F3F3;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: #888; \n      background-color: rgba(109, 183, 243, 255);\n      border-radius: 5px;\n    }\n\n      h3, p{\n          color: #606060;\n      }\n      .image-form-container {\n          width: 200%;\n          height: 100vh;\n          background-color: white;\n          padding: 2rem 4rem;\n      }\n\n      .image-display {\n        display: flex;\n        height: 100%;\n        gap: 1rem\n      }\n      .title {\n          margin-bottom: 1.5rem;\n          display:flex;\n          justify-content: space-between;\n          align-items: center\n      }\n      .title h3 {\n          font-size: 1.5rem\n      }\n      .image-options ul{\n          list-style: none;\n          display: flex;\n      }\n      .image-options ul li:last-child {\n          border-top-right-radius: 5px;\n        }\n      .image-options ul li:first-child {\n          border-top-left-radius: 5px;\n        }\n      \n      .image-options ul li {\n          border: 1px solid #C2C2C2;\n          padding: 0.25rem 0.5rem;\n          transform: translateY(1px);\n          cursor:pointer;\n      }\n      .image-options ul li p {\n          font-weight: 600;\n      }\n      .image-option.active {\n          background-color: #F3F3F3;\n          border-bottom: none;\n      }\n\n      .image-option.active p {\n          color: #2F2F2F\n      }\n      .image-selection {\n          width: 80%;\n          height: 75%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: #F3F3F3;\n          border: 1px solid #C2C2C2;\n          border-radius: 10px;\n          border-top-left-radius: 0;               \n      }\n      .image-info {\n        width: 20%;\n        height: 75%;\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #F3F3F3;\n        border: 1px solid #C2C2C2;\n        border-radius: 10px;\n        padding-top: 2rem\n      }\n\n      .info-form {\n        width: 100%;\n        height: 100%;\n      }\n\n      .form {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n\n      .input-container {\n        width: 80%;;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      .image-form {\n          display: flex;\n          flex-direction: column;\n          gap: 2rem\n      }\n      .textarea { \n        max-width: 100%;\n        max-height: 60%;\n        padding: 0.5rem\n      }\n\n      .image-form button {\n          background-color: rgba(109,183,243,255);\n          border: none;\n          font-size: 1rem;\n          color: white;\n          font-weight: 800;\n          padding: 0.5rem;\n          cursor: pointer;\n      }\n      .file-input {\n          opacity: 1;\n          cursor:pointer\n      }\n      .file-button {\n          width: 100%;\n          heigth: 4rem;\n          background-color: #2596be;\n          position: relative;\n          padding: 0.5rem;\n          cursor:pointer\n      }\n      .file-button p {\n          text-align: center;\n          position: absolute;;\n          left: 50%;\n          transform: translateX(-50%);\n          color: white;\n          font-weight: 600;\n          cursor:pointer\n      }\n      .gallery {\n        position:relative;\n        width: 100%;\n        height: 100%;\n        margin: 1rem;\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(135px, 1fr));\n        grid-template-rows: repeat(auto-fill, minmax(135px, 1fr));\n        gap: 0.5rem;\n        padding: 1rem;\n      }\n      \n      .image-container {\n        width: 135px;\n        height: 135px;\n        display:block;\n        cursor: pointer;\n        border: 4px solid transparent;\n        overflow: hidden;\n        line-height: 0;\n        align-self: flex-start;\n      }\n      \n      .image-container.selected {\n        border: 4px solid rgba(109, 183, 243, 255);\n        border-radius: 0.5rem;\n      }\n      \n      .image-container img {\n        transition: 0.5s;\n        display: block;\n      }\n      \n      .image-container.selected img {\n        transform: scale(1.2);\n        background-color: rgba(109, 183, 243, 255);\n        filter: sepia(1) hue-rotate(180deg);\n      \n      }\n\n      .buttons-container {\n        position: absolute;\n        bottom: 0;\n        margin-bottom: 1rem;  \n        display: flex;\n        gap: 1rem;\n      }\n\n      .delete-button button {\n        border-radius: 0.5rem;\n        cursor: pointer;\n        background-color: red;\n        border: none;\n        padding: 0.5rem;\n      }\n\n      .delete-button button svg{\n        width: 2rem;\n        fill: white\n      }\n      .select-button { \n        display: flex;\n        justify-content: center;\n        width: 100%;\n      } \n      .select-button button { \n        width: 100%;\n        background-color: rgba(109,183,243,255);\n        border: none;\n        font-size: 1rem;\n        color: white;\n        font-weight: 800;\n        padding: 0.5rem;\n        cursor: pointer;\n        border-radius: 0.5rem;\n        padding: 0.5rem\n      }\n      .exit {\n          width: 2rem;\n          cursor: pointer\n      }\n      .tab-page {\n        position: absolute;\n        bottom: -3rem;\n        margin-top: 10px;\n        display: flex;\n        justify-content: space-around;\n        gap: 1rem;\n        transform: translateX(100%);\n      }\n\n    .tab-page button {\n        background-color: rgba(109, 183, 243, 255);\n        color: white;\n        border: none;\n        border: 1px solid grey;\n        padding: 5px;\n        font-size: 1.2rem;\n        cursor: pointer;\n    }\n\n    .nextPageButton.inactive {\n        opacity: 50%;\n        cursor: default;\n    }\n    .prevPageButton.inactive {\n        opacity: 50%;\n        cursor: default;\n    }\n    .firstPageButton.inactive {\n        opacity: 50%;\n        cursor: default;\n    }\n    .lastPageButton.inactive {\n        opacity: 50%;\n        cursor: default;\n    }\n    .page {\n        background-color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: 600;\n    }\n\n    .alert-container {\n      margin-top: 90%;\n      padding: 0.5rem;\n    }\n\n    .alert-container p {\n      font-size: 0.9rem;\n      color: black;\n      font-weight: 600;\n    }\n\n    .alert-container button {\n      background-color: white;\n      color: red;\n      font-weight: 800;\n      padding: 0.5rem;\n      border: 2px solid red;\n      cursor: pointer;\n      transition: 0.2s;\n      border-radius: 0.5rem;\n    }\n\n    .alert-container button:hover {\n      background-color: red;\n      color: white;\n    }\n  \n  </style>\n    `,this.selectImageOption(),this.handleFileUpload(),this.selectImage(),this.changePage(),this.shadow.querySelector(".exit").addEventListener("click",(()=>{const n=new CustomEvent("remove-active",{detail:{detail:"image-component"}});document.dispatchEvent(n)})),this.shadow.querySelector("#delete-button").addEventListener("click",(async()=>{const n=await this.deleteImage();if(n.success)await this.getImages(),await this.render();else{const e=this.shadow.querySelector(".alert-container"),t=document.createElement("p"),i=document.createElement("button");t.textContent=n.message,i.innerHTML="Deseo eliminar la imagen de todas formas",i.setAttribute("type","button"),e.innerHTML="",e.appendChild(t),e.appendChild(i),this.confirmDeleteImage=1,i.addEventListener("click",(async()=>{await this.deleteImage(),await this.getImages(),await this.render()}))}}))}}customElements.define("image-form-component",r);class l extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}async connectedCallback(){document.addEventListener("open-gallery",(async n=>{const e=n.detail[0],t=localStorage.getItem("files"),i=t?JSON.parse(t):[];i.push(e),localStorage.setItem("files",JSON.stringify(i)),this.renderImage()}))}renderImage=async()=>{const e=localStorage.getItem("files");JSON.parse(e).forEach((e=>{const t=this.shadow.querySelector(".gallery"),i=document.createElement("div"),a=document.createElement("img");a.src=`${n}/admin/images/${e}`,i.appendChild(a),t.appendChild(i)}))};render(){this.shadow.innerHTML='\n            <div class="gallery"></div>\n\n        \n            <style>\n            .gallery {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                width: 100%;\n                height:100%;\n                overflow: scroll\n              }\n            </style>\n        '}}customElements.define("gallery-component",l),t(506),t(459)})()})();