(()=>{var n={336:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        .erase-alert {\n            width: 200%;\n            height: 100%;\n            display:flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            gap:1rem;\n            background-color: white;\n        }\n\n        .erase-image {\n            width: 25%;\n        }\n\n        .erase-image svg {\n            fill: orange;\n        }    \n        .erase-information {\n            text-align: center;\n            display:flex;\n            flex-direction: column;\n        }\n\n        .erase-information div p {\n            font-size: 0.8rem;\n            color: grey;\n        }\n\n        .erase-options {\n            display: flex;\n            justify-content: center;\n            gap:1rem;\n            width: 80%\n        }\n\n        .erase-options div {\n            width: 50%;\n        }\n\n        button {\n            padding: 0.5rem;\n            width: 100%;\n            border: none;\n            cursor: pointer;\n        }\n\n        button:hover {\n            background-color: #738c97;\n        }\n\n        .cancel-erase {\n            color: white;\n            background-color:#989898;\n        }\n\n        .accept-erase {\n            color: white;\n            background-color:#ff323f;\n        }\n\n        </style>\n\n            <div class="erase-alert">\n                <div class="erase-image">\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>alert-circle-outline</title><path d="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" /></svg>\n                </div>\n                \n                <div class="erase-information">\n                    <div>\n                        <h3>¡Este perfil será eliminado permanentemente!</h3>\n                    </div>\n                    <div>\n                        <p>¿Estás seguro que quieres eliminarlo?</p>\n                    </div>\n                </div>\n\n                <div class="erase-options">\n                    <div>\n                        <button type="button" class="cancel-erase" value="cancel">Cancelar proceso</button>\n                    </div>\n                    <div>\n                        <button type="button" class="accept-erase" value="accept">Eliminar Perfil</button>\n                    </div>\n                </div>\n            </div>\n        ',this.renderTabs()}renderTabs=async()=>{const n=this.shadow.querySelectorAll("button");let e="";document.addEventListener("add-active",(n=>{e=n.detail.componentId})),n.forEach((n=>{n.addEventListener("click",(n=>{if("accept"===n.target.value){const n=new CustomEvent("refresh-table",{detail:{fichaId:e}});document.dispatchEvent(n)}const t=new CustomEvent("remove-active");document.dispatchEvent(t)}))}))}}customElements.define("delete-component",n)},913:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                border: none;\n                background-color:transparent;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .tab-section {\n                width:100%;\n            }\n            \n            .tab-list{\n                width:100%;\n            }\n\n            .tab-section ul li {\n                display: flex;\n                flex-direction: column;\n                gap: 1rem;\n            }\n\n            .ficha {\n                display: flex;\n                flex-direction: column;\n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n\n            }\n\n            .ficha .tab-options {\n                background-color: rgba(109,183,243,255);\n                display: flex;\n                justify-content: flex-end;\n                gap: 0.5rem;\n            }\n            \n            .tab-options div{\n                width: 2.5rem;\n                height: 2.5rem;\n                fill: white;\n            }\n            \n            .ficha .tab-information {\n                display: flex;\n                flex-direction: column;\n                background-color: rgba(113,139,224,255);\n                padding: 15px;\n            }\n            \n            .tab-information div {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n            \n            .tab-information div p {\n                color: white;\n                font-size: 1.1rem;\n            }\n            \n            .tab-information div .label {\n                font-weight: 800;\n            }\n        </style>\n    \n        <div class="ficha">\n            <div class="tab-options">\n                <div class="edit">\n                    <button id="editButton" >\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" /></svg>\n                    </button>\n                </div>\n                <div class="delete">\n                    <button id="deleteButton">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>\n                    </button>  \n                </div>\n            </div>\n            <div class="tab-information">\n                <div>\n                    <p class="label">Nombre:</p>\n                    <p class="value" id="nameValue"><slot name="name">Indefinido</slot></p>\n                </div>\n                <div>\n                    <p class="label">Email:</p>\n                    <p class="value" id="emailValue"><slot name="email">Indefinido</slot></p>\n                </div> \n            </div>\n        </div>\n                    \n        ';const n=this.shadow.querySelector("#deleteButton"),e=this.shadow.querySelector("#editButton");n.addEventListener("click",(()=>{const n=this.getAttribute("id"),e=new CustomEvent("add-active",{detail:{componentId:n}});document.dispatchEvent(e)})),e.addEventListener("click",(()=>{const n=this.getAttribute("id"),e=new CustomEvent("editRow",{detail:{componentId:n}});document.dispatchEvent(e)}))}}customElements.define("ficha-component",n)},777:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}submitForm=n=>{const e=new CustomEvent("filter-table",{detail:{data:n}});document.dispatchEvent(e)};render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n                list-style: none;\n            }\n\n            .filter-section {\n                position: relative;\n                margin-bottom: 1rem;\n                overflow: hidden;\n            }\n\n            .filter-button {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                padding: .5rem 0;\n                cursor: pointer;\n                background-color: white;\n                transition: 0.5s;\n            }\n\n            .filter-button.active {\n                margin-top: 10rem\n            }\n            \n            .filter-image {\n                transition: 0.5s\n            }\n\n            .filter-image svg {\n                width: 2.5rem;\n                fill: rgba(109,183,243,255);\n                \n            }\n\n            .filter-image.active {\n                transform: rotateY(360deg)\n            }\n            .filter-image.colorActive  svg{\n                fill: #04B911;\n            }\n            .filter-form {\n                width: 100%;\n                position: absolute;\n                z-index: -1\n            }\n\n            .filter-form.active {\n                z-index: 0\n            }\n\n            hero {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n\n            .filter-form form {\n                padding: 1rem 0;\n                display: flex;\n                justify-content: center;\n                gap: 4rem;\n            }\n\n            form label {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n\n            form input {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                font-size: 1.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n                padding: 0.2rem;\n                padding-left: 1rem;\n            }\n\n        </style>\n        \n        <section class="filter-section">\n            <div class="filter-form">\n                <div>\n                    <hero>Filtra los registros:</hero>\n                </div>\n                <form id="filter-form">\n                    <div class="campo">\n                        <label>Nombre: </label>\n                        <input name="name" />\n                    </div>\n                    <div class="campo">\n                        <label>Email: </label>\n                        <input name="email" />\n                    </div>\n                </form>\n            </div>\n            <div class="filter-button">\n                <div class="filter-image">\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z" /></svg>\n                </div>\n            </div>\n        </section>\n        ',this.renderFilter()}renderFilter=()=>{const n=this.shadow.querySelector(".filter-button");n.addEventListener("click",(()=>{const e=this.shadow.querySelector(".filter-form"),t=this.shadow.querySelector(".filter-image");n.classList.toggle("active"),t.classList.toggle("active"),e.classList.contains("active")?(e.classList.remove("active"),setTimeout((()=>{t.innerHTML=' <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z" /></svg>',t.classList.remove("colorActive")}),150)):(setTimeout((()=>{e.classList.add("active")}),300),setTimeout((()=>{t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 12V19.88C12.04 20.18 11.94 20.5 11.71 20.71C11.32 21.1 10.69 21.1 10.3 20.71L8.29 18.7C8.06 18.47 7.96 18.16 8 17.87V12H7.97L2.21 4.62C1.87 4.19 1.95 3.56 2.38 3.22C2.57 3.08 2.78 3 3 3H17C17.22 3 17.43 3.08 17.62 3.22C18.05 3.56 18.13 4.19 17.79 4.62L12.03 12H12M17.75 21L15 18L16.16 16.84L17.75 18.43L21.34 14.84L22.5 16.25L17.75 21" /></svg>',t.classList.add("colorActive")}),150))})),n.addEventListener("click",(()=>{if(!n.classList.contains("active")){const n=this.shadow.querySelector("#filter-form"),e=Object.fromEntries(new FormData(n));for(const n in e)""===e[n]&&delete e[n];setTimeout((()=>{n.reset()}),500),this.submitForm(e)}}))}}customElements.define("filter-component",n)},6:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.isFormValid=!1}async attributeChangedCallback(n,e,t){await this.render()}async connectedCallback(){await this.render(),document.addEventListener("editRow",(async n=>{this.EditTab(n)}))}loadData=async n=>{try{const e=await fetch(`http://localhost:8080/api/admin/users/${n}`,{method:"GET",headers:{"Content-Type":"application/json"}});return this.data=await e.json(),this.data}catch(n){console.log(n)}};submitData=async n=>{const e=Object.fromEntries(new FormData(n));if(this.validatePassword(e.password,e.passwordConfirmed)){const t=this.data?"PUT":"POST",i="http://localhost:8080/api/admin/users",o=this.data?`${i}/${this.data.id}`:i;fetch(o,{method:t,headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>{if(!e.ok)return void e.json().then((n=>{const e=n.message[0].message;this.showError(e)}));n.reset();const t=this.shadow.querySelector("#errorDiv");return t&&this.shadow.querySelector(".form-container").removeChild(t),e.json()})).then((e=>{const t=new CustomEvent("refresh-table");document.dispatchEvent(t),this.isFormValid&&(n.reset(),this.data="")})).catch((n=>{console.error(n)}))}else{const n="Las contraseñas no coinciden";this.showError(n)}};showError=n=>{const e=document.createElement("div"),t=document.createElement("p");t.textContent=n,e.appendChild(t),e.classList.add("error"),e.id="errorDiv";const i=this.shadow.querySelector(".form-container"),o=this.shadow.querySelector("#errorDiv");o&&i.removeChild(o),i.prepend(e)};EditTab=async n=>{const e=n.detail.componentId,t=await this.loadData(e);this.shadow.getElementById("name").value=t.name,this.shadow.getElementById("email").value=t.email};validatePassword=(n,e)=>n===e;render(){this.shadow.innerHTML='\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                background-color: transparent;\n                border: none;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .form-section {\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                gap: 2rem;\n            }\n            \n            .form-section .form-selector {\n                width: 100%;\n                height: 5vh;\n                background-color: white;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            \n            .form-selector .selector {\n                display: flex;\n                height: 100%;\n            }\n            \n            .selector div {\n                height: 100%;\n                width: 100%;\n                padding: 0 1rem;\n            }\n            \n            .selector div p {\n                color:rgba(133,133,133,255);\n                font-size: 1rem;\n                font-weight: 600;\n            }\n            \n            .selector div.active {\n                background-color: rgba(109,183,243,255);\n            }\n            \n            .selector div.active p {\n                color: white;\n            }\n            \n            .form-selector .options {\n                height: 100%;\n                display: flex;\n                gap: 1rem;\n                align-items: center;\n                margin-right: 10px;\n            }\n            \n            .options div {\n                height: 2.5rem;\n                width: 2.5rem;\n                display: flex;\n            }\n            \n            .options div button {\n                width: 100%;\n                height: 100%;\n            }\n            \n            .options div svg {\n                fill: rgba(109,183,243,255);\n            }\n            \n            .profile-form {\n                display: none;\n            }\n            \n            .profile-form.active {\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                width: 100%;\n                gap: 1rem;\n            }\n            \n            form div {\n                display: flex;\n                flex-direction: column;\n                gap: 0.5rem;\n            }\n            \n            form div label {\n                color: white;\n                font-size: 1.5rem;\n                font-weight: 600;\n            }\n            \n            form div input {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                font-size: 1.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n                padding: 0.2rem;\n                padding-left: 1rem;\n            }\n\n            .error {\n                background-color: white;\n                border-left: 5px solid red;\n            }\n            .error p {\n                color: red;\n                font-size: 1.5rem;\n                font-weight: 600;\n                margin: 10px\n            }\n        </style>\n        \n        <section class="form-section">\n            <div class="form-selector">\n                <div class="selector">\n                    <div class="active" data-form="principal">\n                        <button>\n                            <p>Principal</p>\n                        </button>\n                    </div>\n                    <div data-form="image">\n                        <button>\n                            <p>Imágenes</p>\n                        </button>\n                    </div>\n                </div>\n                <div class="options">\n                    <div>\n                        <button type="button" id="resetButton">\n                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>broom</title><path d="M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z" /></svg>                        </button>\n                    </div>\n                    <div>\n                        <button type="submit" id="submitButton">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>content-save</title><path d="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" /></svg>                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class="form-container">\n                <form id="form">\n                    <div class="profile-form active " data-form="principal" id="form-principal">\n                            <div>\n                                <label>Nombre</label>\n                                <input name="name" type="text" id=\'name\'></input>\n                            </div>\n                            <div>\n                                <label>Email</label>\n                                <input name="email" type="text" id=\'email\'></input>\n                            </div>\n                            <div>\n                                <label>Contraseña</label>\n                                <input name="password" type="text"></input>\n                            </div>\n                            <div>\n                                <label>Confirme contraseña</label>\n                                <input name="passwordConfirmed" type="text"></input>\n                            </div>\n                    </div>\n                    <div class="profile-form " data-form="image">\n                        <div class="input-image">\n                            <label>Seleccione una imagen</label>\n                                <image-component></image-component>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </section>\n        ',this.renderTabs()}renderTabs=async()=>{const n=this.shadow.querySelector(".form-container").querySelectorAll(".profile-form"),e=this.shadow.querySelector("#form"),t=this.shadow.querySelector("#resetButton"),i=this.shadow.querySelector(".selector").querySelectorAll("div"),o=this.shadow.querySelector("#submitButton");t.addEventListener("click",(()=>{e.reset()})),i.forEach((e=>{const t=e.dataset.form,o=new CustomEvent("show-form",{detail:t});e.addEventListener("click",(()=>{document.dispatchEvent(o);for(let n=0;n<i.length;n++)i[n].classList.remove("active");e.classList.add("active"),n.forEach((n=>{n.dataset.form==t?n.classList.add("active"):n.classList.remove("active")}))}))})),o.addEventListener("click",(n=>{n.preventDefault(),this.submitData(e)}))}}customElements.define("form-component",n)},761:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            header{\n                display: flex;\n                justify-content: space-between;\n                margin: 2rem 0rem;\n                align-items: center;\n            }\n            header div{\n                display: flex;\n            }\n            \n            .centro {\n                margin-right: 10rem;\n            }\n        \n            header div h1 {\n                color: white;\n                font-size: 2.5rem;\n            }\n            \n            .hamburger-button {\n                width: 2rem;\n                height: 2.5rem;\n                fill: white;\n                display: flexs;\n                flex-direction: column;\n                justify-content: center;\n                gap: 0.5rem;\n                cursor: pointer;\n            }\n            \n            .hamburger-button span {\n                width: 100%;\n                height: 0.2rem;\n                background-color: white;\n                transition: 0.2s ease-in;\n            }\n            \n            .hamburger-button.active .top{\n                transform: translateY(11px) rotate(45deg)\n            }\n            \n            .hamburger-button.active .mid{\n                transform:  scale(0%)\n            }\n            .hamburger-button.active .bot{\n                transform: translateY(-11px) rotate(-45deg)\n            }\n\n        </style>\n        \n        <header>\n            <div>\n                <h1>Detectib</h1>\n            </div>\n            <div class="centro">\n                <h1>Clientes</h1>\n            </div>\n            <div class="hamburger-button">\n                <span class="top"></span>\n                <span class="mid"></span>\n                <span class="bot"></span>\n            </div>\n        </header>\n        ';const n=this.shadow.querySelector(".hamburger-button");n.addEventListener("click",(()=>{const e=new CustomEvent("show-lateral-menu");document.dispatchEvent(e),n.classList.toggle("active")}))}}customElements.define("header-component",n)},732:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n            <div class="image-section">\n                <div class="image-container">\n                <input class="file-input" type="file" accept="image/*" multiple="false"/>\n                    <div id="image-preview" class="image-preview">\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z" /></svg>\n                    </div>\n                </div>\n\n            </div>\n\n            <style>\n                *{\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n                .image-section {\n                    display: flex:\n                    justify-content: center;\n                    position: relative;\n                    height: 30vh;\n                    width: 80%\n                }\n\n                .image-container {\n                    width: 100%;\n                    height: 100%;\n                    position:relative\n                }\n\n                .file-input {\n                    width: 100%;\n                    height: 100%;\n                    position: absolute;\n                    left: 0;\n                    cursor:pointer;\n                    opacity: 0\n                }\n\n                .image-preview {\n                    width: 100%;\n                    height: 100%;\n                    display: flex;\n                    justify-content: center\n                }\n\n                .image-preview svg {\n                    width: 50%;\n                    fill: white;\n                    height: 100%\n                }\n\n                .image {\n                    width : 100%;\n                    object-fit: contain\n                }\n            </style>\n        ',this.renderImage()}renderImage=()=>{this.shadow.querySelector(".file-input").addEventListener("change",(n=>{const e=n.target.files[0],t=new FileReader;t.onloadend=()=>{const n=t.result,e=this.shadow.querySelector("#image-preview"),i=document.createElement("img");i.classList.add("image"),i.src=n,e.innerHTML="",e.appendChild(i)},t.readAsDataURL(e)}))}}customElements.define("image-component",n)},282:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}selectImageOption=()=>{};render(){this.shadow.innerHTML='\n        <div class="image-form-container">\n            <div class="title">\n                <h3>Añade Imágenes</h3>\n            </div>\n\n            <div class="image-options">\n                <ul>\n                    <li class="image-option active"><p>Subir archivo</p></li>\n                    <li class="image-option"><p>Biblioteca de medios</p></li>\n                </ul>\n            </div>\n\n            <div class="image-selection">\n            </div>\n        </div>\n\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            h3, p{\n                color: #606060;\n            }\n            .image-form-container {\n                width: 200%;\n                height: 100vh;\n                background-color: white;\n                padding: 2rem 4rem;\n            }\n            .title {\n                margin-bottom: 1.5rem\n            }\n            .title h3 {\n                font-size: 1.5rem\n            }\n            .image-options {\n            }\n            .image-options ul{\n                list-style: none;\n                display: flex;\n            }\n            .image-options ul li:last-child {\n                border-top-right-radius: 5px;\n              }\n            .image-options ul li:first-child {\n                border-top-left-radius: 5px;\n              }\n            \n            .image-options ul li {\n                border: 1px solid #C2C2C2;\n                padding: 0.25rem 0.5rem;\n                transform: translateY(1px);\n            }\n            .image-options ul li p {\n                font-weight: 600;\n            }\n            .image-option.active {\n                background-color: #F3F3F3;\n                border-bottom: none\n            }\n            .image-selection {\n                width: 100%;\n                height: 75%;\n                background-color: #F3F3F3;\n                border: 1px solid #C2C2C2;\n            }\n        </style>\n\n        ',this.selectImageOption()}}customElements.define("image-form-component",n)},445:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}render(){this.shadow.innerHTML='\n        <div class="hamburger-tab">\n                <ul>\n                    <li value="users">\n                        Users\n                    </li>\n                    <li value="faqs">\n                        Faqs\n                    </li>\n                </ul>\n            </div>\n\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n\n            ul{\n                list-style: none;\n            }\n\n            .hamburger-tab {\n                background-color: #6db7f3;\n                position: absolute;\n                display:none;\n                top: 0;\n                right: 0;\n                width: 20%;\n                margin-top: 5.5%;\n            }\n\n            .hamburger-tab ul {\n                width: 100%\n            }\n            .hamburger-tab li {\n                width:100%;\n                color: white;\n                padding: 1rem 0.5rem;\n                cursor:pointer;\n                font-size: 1.5rem\n            }\n\n            .hamburger-tab li:hover {\n                background-color: white;\n                color: #6db7f3;\n            }\n\n            .hamburger-tab.active {\n                display: flex;\n                position: absolute;\n                top: 0;\n            }\n\n\n        </style>\n        ',this.renderFunctions(),this.apiFunctions()}renderFunctions=()=>{const n=this.shadow.querySelector(".hamburger-tab");document.addEventListener("show-lateral-menu",(()=>{n.classList.toggle("active")}))};apiFunctions=()=>{this.shadow.querySelectorAll("li").forEach((n=>{n.addEventListener("click",(n=>{const e=n.target.getAttribute("value"),t=new CustomEvent("change-table",{detail:e});document.dispatchEvent(t)}))}))}}customElements.define("lateral-menu-component",n)},103:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.render()}submitForm=()=>{const n=this.shadow.querySelector("#loginForm");n.addEventListener("submit",(e=>{e.preventDefault();const t=Object.fromEntries(new FormData(n));fetch("http://localhost:8080/api/auth/users/signin",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((n=>{n.ok?n.json().then((n=>{const e=n.accessToken;sessionStorage.setItem("accessToken",e),this.redirectPanel(n)})):n.json().then((n=>{this.showError(n),console.log(n.message)}))}))}))};showError=n=>{const e=n.message,t=this.shadow.querySelector(".login-panel");t.querySelector(".error-container")&&t.querySelector(".error-container").remove();const i=document.createElement("div"),o=document.createElement("p");o.innerHTML=e,i.appendChild(o),t.appendChild(i),i.classList.add("error-container")};redirectPanel=n=>{const e=`¡Bievenido ${n.name}!`,t=this.shadow.querySelector(".login-panel");t.querySelector(".error-container")&&t.querySelector(".error-container").remove();const i=document.createElement("div"),o=document.createElement("p");o.innerHTML=e,i.appendChild(o),t.appendChild(i),i.classList.add("success-container"),setTimeout((()=>{window.location.href="http://127.0.0.1:5500/client/admin/admin.html"}),500)};render(){this.shadow.innerHTML='\n        <style>\n            * {\n              padding: 0;\n              margin: 0;\n              box-sizing: border-box\n            }\n            .login-panel {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                height: 100vh;\n              }\n              \n              .login-panel form {\n                border: 1px solid white;\n                display:flex;\n                flex-direction: column;\n                gap: 1rem;\n                padding: 3rem ;\n                color: white;                \n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n              }\n\n              .campo {\n                display:flex;\n                flex-direction:column;\n                gap: 0.5rem\n              }\n\n              form legend {\n                font-weight: 800;\n              }\n\n              input {\n                background-color: rgba(113,139,224,255);\n                padding:0.5rem;\n                color: white;\n                border: none;\n                border-bottom: 1px solid white;\n            }\n\n            button {\n                width: 100%;\n                background-color: rgba(113,139,224,255);\n                color: white;\n                font-weight: 800;\n                padding: 1rem;\n                border: none;\n                border: 1px solid white;\n                cursor: pointer;\n            }\n            .title {\n               color: white;\n            }\n            \n            .error-container {\n              background-color: white;\n              border-left: 5px solid red;\n              padding: 1rem 0.5rem;\n              margin-top: 2rem;\n            }\n            .error-container p {\n              color: red;\n              font-weight: 600\n            }\n\n            .success-container {\n              background-color:white;\n              border-left: 5px solid green;\n              padding: 1rem 0.5rem;\n              margin-top: 2rem;\n            }\n            .success-container p {\n              color: green;\n              font-weight: 600\n            }\n            \n        </style>\n        <div class="login-panel">\n            <form id=\'loginForm\'>\n                <legend>ADMIN LOGIN:</legend>\n\n                <div class=\'campo\'>\n                    <label for="email">Email</label>\n                    <input name="email"></input>\n                </div>\n\n                <div class=\'campo\'>\n                    <label for="password" type="email">Password</label>\n                    <input name="password" type="password"></input>\n                </div>\n\n                <div class=\'submit\'>\n                    <button>LOGIN</button>\n                </div>\n\n            </form>\n        </div>\n        ',this.submitForm()}}customElements.define("login-component",n)},984:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"});const n=this.attributes.getNamedItem("width").value,e=this.attributes.getNamedItem("heigth").value;this.render(n,e)}render(n,e){this.shadow.innerHTML=`\n        <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            list-style: none;\n        }\n        img {\n            width: 100%;\n            height: 100%;\n        }\n        .modal-section {\n            position: fixed;\n            top: 0;\n            width: 100%;\n            height: 100vh;\n            display: none;\n            justify-content: center;\n            align-items: center;\n        }\n        \n        .modal-section::after {\n            content: "";\n            position: absolute;\n        }       \n        .modal-section .modal { \n            background-color: rgb(93, 93, 93);\n            width: ${n};\n            height: ${e};\n            display: grid;\n            grid-template-columns: 50% 50%;\n            box-shadow: 10px 10px 58px -6px rgba(0,0,0,0.75);\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .close-button {\n            position: absolute;\n            width: 25px;\n            height: 25px;\n            right: 0;\n            top: 0;\n            margin: 10px;\n            cursor: pointer;\n            filter: invert(0.5) sepia(0) saturate(40) hue-rotate(10deg);\n            z-index: 999;\n        }\n        \n        .close-button:hover {\n            filter: invert(0.5) sepia(1) saturate(40) hue-rotate(10deg);\n        }\n\n        .modal-section.active {\n            @include fadeIn(0s,0.5s);\n            display : flex;\n            z-index: 999;       \n        }\n\n        .modal-section.active .modal {\n            z-index: 999;\n        }\n\n        </style>\n        <section class="modal-section active" id="modal">\n        <div class="modal">\n            <slot name="image-component-modal"></slot>\n            <slot name="details-component-modal"></slot>\n            \n            <div class="close-button button-close-modal" id="closeButton">\n                <img src="./assets/close.svg" />\n            </div>            \n        </div>\n    </section>\n        `;const t=this.shadow.querySelector("#closeButton");t.addEventListener("click",(()=>t.closest(".modal-section").classList.remove("active"))),document.addEventListener("remove-active",(()=>t.closest(".modal-section").classList.remove("active"))),document.addEventListener("add-active",(n=>{t.closest(".modal-section").classList.add("active")}))}}customElements.define("modal-component",n)},596:()=>{class n extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.data=[],this.page=null,this.lastPage="",this.filter=null}static get observedAttributes(){return["url"]}async connectedCallback(){document.addEventListener("refresh-table",(async n=>{if(n.detail){const e=n.detail.fichaId;await this.deleteRow(e)}await this.loadData(),await this.render()})),document.addEventListener("filter-table",(async n=>{this.filter=n.detail.data,this.page=null,await this.loadData(),await this.render()}))}async attributeChangedCallback(n,e,t){await this.loadData(),await this.render()}async loadData(){let n="http://localhost:8080/api/admin/users",e=null==this.filter?"?":"&";null!=this.filter&&(n=this.filterUrl(n)),null!=this.page&&(n=`${n}${e}page=${this.page}`);try{const e=await fetch(n,{method:"GET",headers:{"Content-Type":"application/json"}});this.data=await e.json(),this.page=this.data.meta.currentPage,this.lastPage=this.data.meta.pages}catch(n){console.log(n)}}async deleteRow(n){try{const e=await fetch(`http://localhost:8080/api/admin/users/${n}`,{method:"DELETE"});this.data=await e.json()}catch(n){console.log(n)}}changePage=async()=>{const n=this.shadow.querySelector(".nextPageButton"),e=this.shadow.querySelector(".prevPageButton"),t=this.shadow.querySelector(".firstPageButton"),i=this.shadow.querySelector(".lastPageButton");n.addEventListener("click",(async()=>{this.page<this.lastPage&&(this.page=Number(this.page)+1,await this.loadData(),await this.render())})),e.addEventListener("click",(async()=>{this.page>1&&(this.page=Number(this.page-1),await this.loadData(),await this.render())})),t.addEventListener("click",(async()=>{this.page=1,await this.loadData(),await this.render()})),i.addEventListener("click",(async()=>{this.page=this.lastPage,await this.loadData(),await this.render()})),1==this.page&&(e.classList.add("inactive"),t.classList.add("inactive")),this.page==this.lastPage&&(n.classList.add("inactive"),i.classList.add("inactive"))};filterUrl=n=>{const e=new URLSearchParams;for(const n in this.filter)e.append(n,this.filter[n]);return`${n}?${e.toString()}`};async render(){const n=this.data.rows.map((n=>`<ficha-component id="${n.id}">\n                            <span slot="name">${n.name}</span>\n                            <span slot="email">${n.email}</span>\n                        </ficha-component>`));this.shadow.innerHTML=`\n        <section class="tab-section">\n            <div class="tab-list">  \n                <ul>\n                    <li class="ficha-element">\n                    ${n.join("")}    \n                    </li>\n                </ul>\n            </div>\n            <div class="tab-page">\n                <button class="firstPageButton">Primera</button>\n                <button id="prevPageButton" class="prevPageButton" >Anterior</button>\n                <div class="page">${this.page}</div>\n                <button id="nextPageButton" class="nextPageButton">Siguiente</button>\n                <button class="lastPageButton">Última</button>\n            </div>\n        </section>\n\n\n        <style>\n            *{\n                margin: 0;\n                padding: 0;\n                box-sizing: border-box;\n            }\n            button {\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                border: none;\n                background-color:transparent;\n            }\n            button:hover svg {\n                transform: scale(110%);\n            }\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n            .tab-section {\n                width:100%;\n            }\n            \n            .tab-list{\n                width:100%;\n            }\n\n            .tab-section ul li {\n                display: flex;\n                flex-direction: column;\n                gap: 1rem;\n            }\n\n            .tab-element {\n                display: flex;\n                flex-direction: column;\n                box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);\n\n            }\n\n            .tab-element .tab-options {\n                background-color: rgba(109,183,243,255);\n                display: flex;\n                justify-content: flex-end;\n                gap: 0.5rem;\n            }\n            \n            .tab-options div{\n                width: 2.5rem;\n                height: 2.5rem;\n                fill: white;\n            }\n            \n            .tab-element .tab-information {\n                display: flex;\n                flex-direction: column;\n                background-color: rgba(113,139,224,255);\n                padding: 15px;\n            }\n            \n            .tab-information div {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n            }\n            \n            .tab-information div p {\n                color: white;\n                font-size: 1.1rem;\n            }\n            \n            .tab-information div .label {\n                font-weight: 800;\n            }\n\n            .tab-page {\n                margin-top: 10px;\n                display: flex;\n                justify-content: space-around;\n                gap: 1rem\n            }\n\n            .tab-page button {\n                background-color: white;\n                padding: 5px;\n                font-size: 1.2rem;\n            }\n\n            .nextPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .prevPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .firstPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .lastPageButton.inactive {\n                opacity: 50%;\n                cursor: default;\n            }\n            .page {\n                width:50%;\n                background-color: white;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                font-weight: 600;\n            }\n        </style>\n            \n        `,this.changePage()}}customElements.define("tab-component",n)}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";t(761),t(777),t(596),t(6),t(913),t(445),t(984),t(336),t(103),t(732),t(282)})()})();